import type { IncludeLanguageAppPath } from '@/features/url';
import Link from 'next/link';
import type { ComponentProps, JSX } from 'react';
import { Button, Text } from 'react-aria-components';
import { GithubIcon } from './icons/GithubIcon';

const RepeatIcon = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="20"
      height="20"
      viewBox="0 0 20 20"
      fill="none"
    >
      <path
        d="M15.7704 0.361021C16.239 0.143546 16.7741 0.265332 17.1334 0.661135L19.6329 3.44481C19.8672 3.70578 20 4.05809 20 4.4278C20 4.7975 19.8672 5.14981 19.6329 5.41078L17.1334 8.19445C16.7741 8.59461 16.239 8.71204 15.7704 8.49457C15.3017 8.27709 14.9971 7.77255 14.9971 7.20712V5.82398H13.7473C13.3529 5.82398 12.9818 6.02841 12.7475 6.38072L11.0916 8.83818L9.52939 6.5199L10.7479 4.71051C11.4548 3.65793 12.5679 3.04031 13.7473 3.04031H14.9971V1.64847C14.9971 1.08739 15.3017 0.578495 15.7704 0.361021ZM6.405 11.1608L7.96719 13.4791L6.74868 15.2885C6.04179 16.3411 4.92873 16.9587 3.74927 16.9587H1.24976C0.558485 16.9587 0 16.3367 0 15.5668C0 14.797 0.558485 14.175 1.24976 14.175H3.74927C4.14372 14.175 4.51474 13.9706 4.74907 13.6183L6.405 11.1608ZM17.1295 19.3379C16.7702 19.738 16.2351 19.8554 15.7665 19.638C15.2978 19.4205 14.9932 18.916 14.9932 18.3505V16.9587H13.7473C12.5679 16.9587 11.4548 16.3411 10.7479 15.2885L4.74907 6.38072C4.51474 6.02841 4.14372 5.82398 3.74927 5.82398H1.24976C0.558485 5.82398 0 5.202 0 4.43214C0 3.66228 0.558485 3.04031 1.24976 3.04031H3.74927C4.92873 3.04031 6.04179 3.65793 6.74868 4.71051L12.7475 13.6183C12.9818 13.9706 13.3529 14.175 13.7473 14.175H14.9971V12.7832C14.9971 12.2221 15.3017 11.7132 15.7704 11.4957C16.239 11.2782 16.7741 11.4 17.1334 11.7958L19.6329 14.5795C19.8672 14.8405 20 15.1928 20 15.5625C20 15.9322 19.8672 16.2845 19.6329 16.5455L17.1334 19.3292L17.1295 19.3379Z"
        fill="#FFF7ED"
      />
    </svg>
  );
};

const RandomIcon = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="20"
      height="20"
      viewBox="0 0 20 20"
      fill="none"
    >
      <path
        d="M5.2875 5.08008C7.87917 2.37435 12.0667 2.3613 14.675 5.03658L12.9583 6.82444C12.6708 7.1246 12.5875 7.57265 12.7417 7.96416C12.8958 8.35566 13.2625 8.60796 13.6667 8.60796H18.6458H19C19.5542 8.60796 20 8.14251 20 7.56395V1.9959C20 1.57394 19.7583 1.19114 19.3833 1.03019C19.0083 0.869238 18.5792 0.956239 18.2917 1.25639L16.5583 3.06601C12.9083 -0.696777 7.02917 -0.683726 3.4 3.10951C2.38333 4.17092 1.65 5.41938 1.2 6.75484C0.954167 7.4813 1.32083 8.27301 2.0125 8.52966C2.70417 8.78631 3.46667 8.40351 3.7125 7.6814C4.03333 6.73309 4.55417 5.84134 5.2875 5.08008ZM0 12.436V12.7666V12.7971V18.0041C0 18.426 0.241667 18.8088 0.616667 18.9698C0.991667 19.1307 1.42083 19.0437 1.70833 18.7436L3.44167 16.9339C7.09167 20.6967 12.9708 20.6837 16.6 16.8904C17.6167 15.829 18.3542 14.5806 18.8042 13.2495C19.05 12.523 18.6833 11.7313 17.9917 11.4746C17.3 11.218 16.5375 11.6008 16.2917 12.3229C15.9708 13.2712 15.45 14.163 14.7167 14.9242C12.125 17.6299 7.9375 17.643 5.32917 14.9677L7.04167 13.1755C7.32917 12.8754 7.4125 12.4273 7.25833 12.0358C7.10417 11.6443 6.7375 11.392 6.33333 11.392H1.35H1.32083H1C0.445833 11.392 0 11.8574 0 12.436Z"
        fill="#FFF7ED"
      />
    </svg>
  );
};

const CatIcon = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="20"
      height="20"
      viewBox="0 0 20 20"
      fill="none"
    >
      <path
        d="M11.2492 7.56353H11.9172C12.7806 9.02159 14.3979 9.99997 16.2496 9.99997C16.6794 9.99997 17.1013 9.94668 17.4998 9.8477V9.99997V11.2182V18.5275C17.4998 19.2013 16.9411 19.7457 16.2496 19.7457C15.5582 19.7457 14.9995 19.2013 14.9995 18.5275V13.1673L9.68652 17.3093H11.8742C12.5657 17.3093 13.1243 17.8537 13.1243 18.5275C13.1243 19.2013 12.5657 19.7457 11.8742 19.7457H6.24869C4.17818 19.7457 2.49833 18.1088 2.49833 16.0911V7.58257C2.49833 6.96965 2.02954 6.4481 1.40448 6.37196L1.09585 6.33389C0.412194 6.25014 -0.0761338 5.64103 0.00981194 4.97482C0.0957576 4.3086 0.720817 3.83273 1.40448 3.91649L1.7131 3.95456C3.58828 4.18297 4.99857 5.7362 4.99857 7.58257V10.8299C6.34245 8.8617 8.63954 7.56353 11.2492 7.56353ZM17.4998 8.57237C17.1091 8.70562 16.6872 8.78175 16.2496 8.78175C15.1402 8.78175 14.1401 8.30969 13.4525 7.56353C13.308 7.40745 13.179 7.23994 13.0657 7.06102C12.7063 6.49759 12.4993 5.83518 12.4993 5.12709V1.47243V0.711044V0.661554C12.4993 0.436944 12.6829 0.258018 12.9134 0.254211H12.9212C13.0501 0.254211 13.1712 0.315122 13.2494 0.414103V0.41791L13.7494 1.06509L14.812 2.44701L14.9995 2.69065H17.4998L17.6873 2.44701L18.7499 1.06509L19.2499 0.41791V0.414103C19.3281 0.315122 19.4492 0.254211 19.5781 0.254211H19.5859C19.8164 0.258018 20 0.436944 20 0.661554V0.711044V1.47243V5.12709C20 5.78569 19.8203 6.40622 19.5078 6.9392C19.0663 7.69297 18.3514 8.27924 17.4998 8.57237ZM15.6246 5.12709C15.6246 4.96555 15.5587 4.81062 15.4415 4.69639C15.3243 4.58216 15.1653 4.51798 14.9995 4.51798C14.8337 4.51798 14.6748 4.58216 14.5575 4.69639C14.4403 4.81062 14.3745 4.96555 14.3745 5.12709C14.3745 5.28864 14.4403 5.44357 14.5575 5.5578C14.6748 5.67203 14.8337 5.7362 14.9995 5.7362C15.1653 5.7362 15.3243 5.67203 15.4415 5.5578C15.5587 5.44357 15.6246 5.28864 15.6246 5.12709ZM17.4998 5.7362C17.6655 5.7362 17.8245 5.67203 17.9417 5.5578C18.059 5.44357 18.1248 5.28864 18.1248 5.12709C18.1248 4.96555 18.059 4.81062 17.9417 4.69639C17.8245 4.58216 17.6655 4.51798 17.4998 4.51798C17.334 4.51798 17.175 4.58216 17.0578 4.69639C16.9406 4.81062 16.8747 4.96555 16.8747 5.12709C16.8747 5.28864 16.9406 5.44357 17.0578 5.5578C17.175 5.67203 17.334 5.7362 17.4998 5.7362Z"
        fill="#FFF7ED"
      />
    </svg>
  );
};

type Props = ComponentProps<'button'> & {
  displayText: string;
  showGithubIcon?: boolean;
  showRepeatIcon?: boolean;
  showRandomIcon?: boolean;
  showCatIcon?: boolean;
  isPressed?: boolean;
  className?: string;
  link?: IncludeLanguageAppPath;
};

export const IconButton = ({
  type,
  displayText,
  showGithubIcon,
  showRepeatIcon,
  showRandomIcon,
  showCatIcon,
  isPressed,
  className,
  link,
}: Props): JSX.Element => {
  const baseClasses =
    'inline-flex items-center justify-center gap-2 rounded-lg px-7 py-1.5 text-black transition-colors duration-200';
  const stateClasses =
    isPressed === true ? 'bg-amber-500' : 'bg-amber-300 hover:bg-amber-100';
  const focusClasses =
    'focus:outline-none focus:ring-2 focus:ring-amber-500 focus:ring-offset-2';

  if (link != null) {
    return (
      <Link
        className={`${baseClasses} ${stateClasses} ${focusClasses} ${className ?? ''}`}
        href={link}
        prefetch={false}
      >
        {showGithubIcon != null && <GithubIcon width={20} height={20} />}
        {showRepeatIcon != null && <RepeatIcon />}
        {showRandomIcon != null && <RandomIcon />}
        {showCatIcon != null && <CatIcon />}
        <Text className="text-right font-inter text-lg font-black text-orange-900">
          {displayText}
        </Text>
      </Link>
    );
  }

  return (
    <Button
      type={type}
      className={`${baseClasses} ${stateClasses} ${focusClasses} ${className ?? ''}`}
      isDisabled={isPressed}
      aria-pressed={isPressed}
    >
      {showGithubIcon != null && <GithubIcon width={20} height={20} />}
      {showRepeatIcon != null && <RepeatIcon />}
      {showRandomIcon != null && <RandomIcon />}
      {showCatIcon != null && <CatIcon />}
      <Text className="text-right font-inter text-lg font-black text-orange-900">
        {displayText}
      </Text>
    </Button>
  );
};
